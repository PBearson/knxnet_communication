Host Protocol Address Information (HPAI): 
- Uniquely identifies the communication channel on the host protocol
- Structure:
    - Structure length
    - Host protocol (e.g., UDP)
    - IP address
    - port

Connection Request Information (CRI):
- Additional information needed to fulfill a connection request
- Structure:
    - Structure length
    - Connection type code
    - Host protocol independent data
    - Host protocol dependent data

Connection Response Data Block (CRD):
- Data block returned with CONNECT_RESPONSE
- Structure:
    - Structure length
    - Connection type code
    - Host protocol independent data
    - Host protocol dependent data

Description Information Block (DIB):
- Returns a specific block of device information when responding to DESCRIPTION_REQUEST
- Returns at least 2 DIB structures: 1) device hardware; 2) support service families.
- Device information types:
    - Device information (1)
    - Service families (2)
    - IP configuration (3)
    - Current IP configuration (4)
    - KNX addresses (5)
    - Reserved (6 - 0xfd)
    - Manufacturer-defined data (0xfe)
    - Not used (0xff)

Connection Header:
- Contains gneral information about an established data connection
- Structure:
    - Structure length
    - Channel ID
    - Sequence counter
    - Service type specific field
    - Connection type specific field

Discovery - SEARCH_REQUEST:
- Send a frame via multicast to the listening endpoints of any listening KNXnet/IP server.
- Connectionless and stateless. The client's discovery endpoint address information is included in the frame body.
- Structure:
    - KNXnet/IP header with service ID 0x0201 (SEARCH_REQUEST)
    - HPAI discovery endpoint

Discovery - SEARCH_RESPONSE:
- Sent by the server as an answer to SEARCH_REQUEST.
- Addressed to the client's discovery endpoint (in the HPAI).
- Returns its HPAI control endpoint, and 2 DIB blocks (device information and supported service families)
- Structure:
    - KNXnet/IP header with service ID 0x0202 (SEARCH_RESPONSE)
    - HPAI control endpoint
    - DIB device hardware
    - DIB supported service families

Description - DESCRIPTION_REQUEST:
- Sent by a client to a server's control endpoint to get a description of the server device.
- Contains the return address of the client's control endpoint.
- Structure:
    - KNXnet/IP header with service ID 0x0203 (DESCRIPTION_REQUEST)
    - HPAI control endpoint

Description - DESCRIPTION_RESPONSE:
- Sent by the server as an answer to DESCRIPTION_REQUEST.
- Addressed to the client's control endpoint (in the HPAI).
- Structure (might include more than 2 DIB structures):
    - KNXnet/IP header with service ID 0x0204 (DESCRIPTION_RESPONSE)
    - DIB device hardware
    - DIB supported service families

Connection Management - CONNECT_REQUEST
- Sent by a client to a server's control endpoint.
- Body begins with return address of the client's control endpoint.
- After the body, the CRI specifies all information specific to this connection.
- Connection types:
    - DEVICE_MGMT_CONNECTION: configure a KNXnet/IP device
    - TUNNEL_CONNECTION: forward KNX telegrams between 2 KNXnet/IP devices
    - REMLOG_CONNECTION: configure and transfer data with a remote logging server
    - REMCONF_CONNECTION: transfer data with a remote configuration server
    - OBJSERVER_CONNECTION: configure and data transfer with an Object Server in a KNXnet/IP device
- Stucture:
    - KNXnet/IP header with service ID 0x0205
    - HPAI control endpoint
    - HPAI data endpoint
    - CRI

Connection Management - CONNECT_RESPONSE
- Sent by the server as an answer to CONNECT_REQUEST.
- Addressed to the client's control endpoint.
- If CONNECT_REQUEST was successful, the body shall include a unique communication channel ID.
- After the body, the HPAI specifies the server's data endpoint
- Finally, the CRD contains connection type specific response data
- Status types:
    - E_NO_ERROR: Connection was successful
    - E_CONNECTION_TYPE: Connection type is not supported by this server device
    - E_CONNECTION_OPTION: One or more connection options are not supported by this server device
    - E_NO_MORE_CONNECTIONS: server has too many concurrent connections
- Structure:
    - KNXnet/IP header with service ID 0x0206
    - Channel ID
    - Connection status
    - HPAI data endpoint
    - CRD

Connection Management - CONNECTIONSTATE_REQUEST
- Sent by a client to a server's control endpoint
- Specifies a channel ID 
- Purpose is basically to "resume" a previous "session" (I have not seen KNX standard use this word, but this is essentially what it is)
- Structure:
    - KNXnet/IP header with service ID 0x0207
    - Channel ID
    - reserved
    - HPAI control endpoint

Connection Management - CONNECTIONSTATE_RESPONSE
- Sent by the server as an answer to CONNECTIONSTATE_REQUEST.
- Addressed to the client's control endpoint.
- Status types:
    - E_NO_ERROR
    - E_CONNECTION_ID: Server cannot find an active data connection with this channel ID
    - E_DATA_CONNECTION: Server detects an error concerning the data connection with the specified ID
    - E_KNX_CONNECTION: Server detects na error concerning the KNX subnetwork connection with the specified ID
- Structure:
    - KNXnet/IP header with service ID 0x0208 
    - Channel ID
    - Connection status

Connection Management - DISCONNECT_REQUEST
- Structure:
    - KNXnet/IP header with service ID 0x0209
    - Channel ID
    - reserved
    - HPAI control endpoint

Connection Management - DISCONNECT_RESPONSE
- Structure:
    - KNXnet/IP header with service ID 0x020a
    - Channel ID
    - Status
